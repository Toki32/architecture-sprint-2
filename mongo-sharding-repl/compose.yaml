name: mongo-sharding

services:

  configSrv:
    image: mongo:latest
    container_name: configSrv
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ] 
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
      retries: 5

  shard1:
    image: mongo:latest
    container_name: shard1
    restart: always
    ports:
      - "27011:27011"
    networks:
      app-network:
    volumes:
      - shard1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27011"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
      retries: 5

  shard1-2:
    image: mongo:latest
    container_name: shard1-2
    restart: always
    ports:
      - "27012:27012"
    networks:
      app-network:
    volumes:
      - shard1-2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27012"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
      retries: 5

  shard1-3:
    image: mongo:latest
    container_name: shard1-3
    restart: always
    ports:
      - "27024:27024"
    networks:
      app-network:
    volumes:
      - shard1-3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27024"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
      retries: 5

  shard2:
    image: mongo:latest
    container_name: shard2
    restart: always
    ports:
      - "27021:27021"
    networks:
      app-network:
    volumes:
      - shard2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27021"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
      retries: 5

  shard2-2:
    image: mongo:latest
    container_name: shard2-2
    restart: always
    ports:
      - "27022:27022"
    networks:
      app-network:
    volumes:
      - shard2-2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27022"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
      retries: 5

  shard2-3:
    image: mongo:latest
    container_name: shard2-3
    restart: always
    ports:
      - "27023:27023"
    networks:
      app-network:
    volumes:
      - shard2-3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27023"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
      retries: 5

  mongos_router:
    image: mongo:latest
    depends_on:
      - configSrv
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
      retries: 5

  pymongos_api:
    container_name: pymongos_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    ports:
      - 8080:8080
    networks:
      app-network:
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"
   

networks:
  app-network:
    driver: bridge

volumes:
  config-data:
  shard1-data:
  shard1-2-data:
  shard1-3-data:
  shard2-data:
  shard2-2-data:
  shard2-3-data:
